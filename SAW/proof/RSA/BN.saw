BN_div_9_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_div"
  (BN_div_spec 19 9);

bn_mont_n0_1_ov <- crucible_llvm_unsafe_assume_spec
  m
  "bn_mont_n0"
  (bn_mont_n0_spec 1);

bn_mont_n0_9_ov <- crucible_llvm_unsafe_assume_spec
  m
  "bn_mont_n0"
  (bn_mont_n0_spec 9);

// TODO: Overriden because it calls into bn_add_words asm function that the
// override in the BN lib isn't working for
bn_mod_exp_base_2_consttime_ov <- crucible_llvm_unsafe_assume_spec
  m
  "bn_mod_exp_base_2_consttime"
  (bn_mod_exp_base_2_consttime_spec 1);


BN_mod_mul_montgomery_9_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_mod_mul_montgomery"
  (BN_mod_mul_montgomery_spec 9);

BN_mod_mul_montgomery_1_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_mod_mul_montgomery"
  (BN_mod_mul_montgomery_spec 1);

BN_mod_mul_montgomery_nonoverlap_1_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_mod_mul_montgomery"
  (BN_mod_mul_montgomery_nonoverlap_spec 1);

BN_mod_exp_mont_consttime_9_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_mod_exp_mont_consttime"
  (BN_mod_exp_mont_consttime_spec 9);

BN_mod_exp_mont_consttime_1_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_mod_exp_mont_consttime"
  (BN_mod_exp_mont_consttime_spec 1);

BN_mod_exp_mont_9_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_mod_exp_mont"
  (BN_mod_exp_mont_spec 9);

BN_equal_consttime_ov <- crucible_llvm_unsafe_assume_spec
  m
  "BN_equal_consttime"
  (BN_equal_consttime_spec);

BN_ucmp_lt_9_ov <- crucible_llvm_verify m "BN_ucmp"
  [value_barrier_w_ov]
  true
  (BN_ucmp_lt_spec 9)
  do {
    //(goal_eval_unint []);
    //(print_goal);
    (w4_unint_yices []);
  };

BN_ucmp_gt_9_1_ov <- crucible_llvm_verify m "BN_ucmp"
  [value_barrier_w_ov]
  true
  (BN_ucmp_gt_spec 9 1)
  do {
    //(goal_eval_unint []);
    //(print_goal);
    (w4_unint_yices []);
  };

BN_bn2bin_padded_same_size_9_ov <- crucible_llvm_verify m "BN_bn2bin_padded"
  []
  true
  (BN_bn2bin_padded_same_size_spec 9)
  do {
    //(simplify basic_ss);
    //(print_goal);
    (w4_unint_yices []);
  };

BN_bin2bn_9_ov <- crucible_llvm_verify m "BN_bin2bn"
  [ OPENSSL_malloc_ov ]
  true
  (BN_bin2bn_spec 9)
  do {
    //(simplify basic_ss);
    //(print_goal);
    (w4_unint_yices []);
  };

let BN_num_bits_spec num_bits = do {
  let num = eval_size {| ((num_bits - 1) / 64) + 1 |};
  let num_bits_max = eval_size {| num * 64 |};

  bn_ptr <- crucible_alloc_readonly (llvm_struct "struct.bignum_st");
  (bn, bn_d_ptr) <- ptr_to_fresh_readonly "bn" (llvm_int num_bits_max);
  points_to_bignum_st_same bn_ptr bn_d_ptr num;

  crucible_precond {{ is_num_bits_bn`{num_bits} bn }};

  crucible_execute_func [bn_ptr];

  crucible_return (crucible_term {{ `num_bits : [32] }});
};

BN_num_bits_32_ov <- llvm_verify m "BN_num_bits"
  []
  true
  (BN_num_bits_spec 32)
  (w4_unint_yices []);

BN_num_bits_576_ov <- llvm_verify m "BN_num_bits"
  []
  true
  (BN_num_bits_spec 576)
  (w4_unint_yices []);
