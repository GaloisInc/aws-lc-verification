OPENSSL_realloc_nonnull_ov <- crucible_llvm_unsafe_assume_spec
  m
  "OPENSSL_realloc"
  // TODO: I'm not sure 32 is even the right old_size.  It surprisingly doesn't
  // seem to matter?  But the symbolic version doesn't work at all.  I guess it
  // works because the C only knows it's an i8*, but doesn't know how big the
  // underlying memory is
  (OPENSSL_realloc_spec 32 64);

OPENSSL_realloc_null_concrete_ov <- crucible_llvm_unsafe_assume_spec
  m
  "OPENSSL_realloc"
  (OPENSSL_realloc_null_concrete_spec 256);

// TODO: Where are all of these allocs comming from?  Run with --sim-verbose=3
// for stack traces on them and double check they're sensible.
let malloc_nums = [24, 32, 40, 48, 256];

OPENSSL_malloc_concrete_ovs <- for malloc_nums
  (\x -> crucible_llvm_unsafe_assume_spec m "OPENSSL_malloc" (OPENSSL_malloc_concrete_spec x));

// TODO: Remove the 24 once you get the first thing to free here
let free_nums = [1, 24];
OPENSSL_free_nonnull_ovs <- for free_nums
  (\x -> crucible_llvm_unsafe_assume_spec m
         "OPENSSL_free"
         (OPENSSL_free_nonnull_spec x));

